package com.climber.cloud_basecore.jvm.bytecode;


/**
 * 现代JVM在执行java代码的时候,通常都会解释执行与编译器执行两者结合起来进行
 * 所谓解释执行,就是通过解释器来读取字节码,遇到响应的执行就去执行该指令
 * 所谓的编译执行,就是通过即时编译器(Just In Time ,JIT),将字节码转换为本地机器码来执行,现代JVM会根据代码热点来生成响应的本地机器码.
 * 基于栈的指令集与基于寄存器的指令集之间的关系:
 * 1:jvm执行指令时所采取的方式是基于栈的指令集
 * 2:基于栈的指令集主要的操作有入栈和出栈两种
 * 3:基于栈的指令集的优势在于它可以在不同平台之间移植,而基于寄存器的指令集与硬件架构紧密管理,无法做到可移植
 * 4:基于栈的指令集的缺点在于完成相同的操作,指令集通常要比基于寄存器的指令集数量要多,基于栈的指令集是在内存中完成操作的,
 * 而基于寄存器的指令集是由cpu直接执行,是在高速缓冲区执行,速度要块很多,虽然虚拟机可以采用一些优化手段,
 *
 */
public class MyTest3 {



}






